#El scritp tiene la funcion de instalar el activiti como el dns y configurarlo 
# Función para validar formato de IP (acepta cualquier IP válida de IPv4)
function Validar-IP {
    param ([string]$ip)
    
    # Eliminar posibles espacios en blanco
    $ip = $ip.Trim()

    # Verificar si el formato es una IP válida (IPv4)
    if ($ip -match "^([0-9]{1,3}\.){3}[0-9]{1,3}$") {
        $partes = $ip -split "\."

        # Comprobar que cada parte esté en el rango 0-255
        foreach ($parte in $partes) {
            if ($parte -lt 0 -or $parte -gt 255) {
                return $false
            }
        }
        return $true
    } else {
        return $false
    }
}

# Instalación del rol de servidor DNS si no está ya instalado
function Instalar-DNS {
    if (-not (Get-WindowsFeature -Name "DNS" | Where-Object {$_.Installed})) {
        Write-Host "Instalando el rol de servidor DNS..."
        Install-WindowsFeature -Name DNS -IncludeManagementTools
    } else {
        Write-Host "El rol de servidor DNS ya está instalado."
    }
}

# Instalación del rol de Active Directory Domain Services (AD DS)
function Instalar-ADDS {
    if (-not (Get-WindowsFeature -Name "AD-Domain-Services" | Where-Object {$_.Installed})) {
        Write-Host "Instalando el rol de Active Directory Domain Services..."
        Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools
        Write-Host "Rol de Active Directory instalado."
    } else {
        Write-Host "El rol de Active Directory ya está instalado."
    }
}

# Promover el servidor a controlador de dominio
function Promover-ControladorDominio {
    param ([string]$dominio, [string]$ip_servidor)
    
    Write-Host "Promoviendo el servidor a controlador de dominio para el dominio $dominio..."
    
    # Promocionar el servidor
    Install-ADDSForest `
        -DomainName $dominio `
        -CreateDnsDelegation:$false `
        -DatabasePath "C:\Windows\NTDS" `
        -DomainMode "7" `
        -ForestMode "7" `
        -LogPath "C:\Windows\NTDS" `
        -SysvolPath "C:\Windows\SYSVOL" `
        -InstallDns:$true `
        -NoRebootOnCompletion:$false `
        -Force:$true
    
    Write-Host "Servidor promovido a controlador de dominio."
}

# Crear una zona DNS directa
function Crear-ZonaDNS {
    param ([string]$zona, [string]$ip_servidor)

    if (-not (Get-DnsServerZone -Name $zona -ErrorAction SilentlyContinue)) {
        Write-Host "Creando la zona DNS $zona..."
        Add-DnsServerPrimaryZone -Name $zona -ZoneFile "$zona.dns" -DynamicUpdate "Secure"
        Write-Host "Zona DNS $zona creada."
        
        # Agregar registro A para el servidor DNS
        Write-Host "Agregando registro A para el servidor DNS..."
        Add-DnsServerResourceRecordA -ZoneName $zona -Name "ns" -IPv4Address $ip_servidor
        Write-Host "Registro A agregado para el servidor."
    } else {
        Write-Host "La zona DNS $zona ya existe."
    }
}

# Solicitar la IP del servidor DNS de forma interactiva
$dns_servidor = Read-Host "Ingrese la IP del servidor DNS"
$dns_google = "8.8.8.8" # DNS de Google como alternativa

# Validar la IP del servidor DNS
if (-not (Validar-IP $dns_servidor)) {
    Write-Host "IP del servidor DNS inválida. Usando DNS de Google: $dns_google"
    $dns_servidor = $dns_google
} else {
    Write-Host "Servidor DNS configurado: $dns_servidor"
}

# Crear diccionario para almacenar las IPs de los adaptadores de red
$adaptadores_red = @{ "WAN" = ""; "LAN" = "" }

# Función para mostrar el estado de los adaptadores de red
function Mostrar-EstadoAdaptadores {
    foreach ($adaptador in $adaptadores_red.Keys) {
        $ip = $adaptadores_red[$adaptador]
        if ($ip) {
            Write-Host "$adaptador - IP: $ip"
        } else {
            Write-Host "$adaptador - IP: No asignada"
        }
    }
}

# Función para asignar IP estática a la LAN
function Configurar-LAN {
    param ([string]$ip)
    if (Validar-IP $ip) {
        $adaptadores_red["LAN"] = $ip
        Write-Host "IP estática $ip asignada al adaptador LAN."
    } else {
        Write-Host "Error: IP inválida."
    }
}

# Mostrar estado inicial de los adaptadores de red
Write-Host "Configuración inicial de red del servidor:"
Mostrar-EstadoAdaptadores

# Bucle para configurar la IP estática en LAN
$intentos = 3
while ($intentos -gt 0) {
    $ip_lan = Read-Host "Ingrese la IP estática para la LAN"
    if (Validar-IP $ip_lan) {
        Configurar-LAN $ip_lan
        break
    } else {
        Write-Host "IP no válida. Intente de nuevo."
        $intentos--
    }
}

# Estado final de los adaptadores de red
Write-Host "`nEstado final de los adaptadores de red:"
Mostrar-EstadoAdaptadores

# Instalación del servidor DNS
Instalar-DNS

# Instalación de Active Directory Domain Services (AD DS)
Instalar-ADDS

# Crear dominio y promover a controlador de dominio
$dominio_ad = Read-Host "Ingrese el nombre del dominio que desea crear (ejemplo: midominio.local)"
Promover-ControladorDominio -dominio $dominio_ad -ip_servidor $ip_lan

# Creación de zona DNS
Crear-ZonaDNS -zona $dominio_ad -ip_servidor $ip_lan

# Verificación de conexión
function Verificar-Conexión {
    param ([string]$ip_lan)
    if ($ip_lan -eq $adaptadores_red["LAN"]) {
        Write-Host "Conexión establecida correctamente con la red interna."
    } else {
        Write-Host "Error en la conexión."
    }
}

Verificar-Conexión $ip_lan
